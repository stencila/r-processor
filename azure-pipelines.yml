# Azure Pipelines config
#
# Uses a hack to enable use of sudo to install dependencies
# See https://github.com/microsoft/azure-pipelines-agent/issues/2043#issuecomment-687983301

jobs:
  - job: test
    strategy:
      matrix:
        linux_40:
          r_version: '4.0.3'
        linux_36:
          r_version: '3.6.3'

    pool:
      vmImage: ubuntu-latest

    container:
      image: 'rocker/r-ver:$(r_version)'
      options:  "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

    steps:
      - script: |
          /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
        displayName: Install sudo

      - script: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            libcurl4-openssl-dev \
            libgit2-dev \
            libssl-dev \
            libxml2-dev \
            nodejs \
            zlib1g-dev
          sudo Rscript -e "install.packages('remotes', repos = 'https://cloud.r-project.org')"
          sudo Rscript -e "remotes::install_deps(dependencies = TRUE, force = TRUE)"
        displayName: Install dependencies

      - script: make lint
        displayName: Run linting
      
      - script: Rscript -e 'covr::codecov()'
        condition: startsWith(variables['r_version'], '4')
        displayName: Run tests and upload coverage

      - script: make tests
        condition: not(startsWith(variables['r_version'], '4'))
        displayName: Run tests

      - script: make check
        displayName: Check package

      - script: make docs
        condition: and(succeeded(), startsWith(variables['r_version'], '4'))
        displayName: Build docs

      - script: |
          npm install @stencila/semantic-release-config @semantic-release/exec
          npx semantic-release
        condition: and(succeeded(), startsWith(variables['r_version'], '4'))
        displayName: Release
